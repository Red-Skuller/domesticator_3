#!/home/rdkibler/.conda/envs/michelangeneo/bin/python
# -*- coding: utf-8 -*-

###### input handling ######
#this happens first so it fails quickly if bad inputs are given
import argparse

parser = argparse.ArgumentParser()

parser.add_argument("protein", type=str, nargs="+", help="Either one or more fasta files containing one or more protein sequences or one or more pdb files")
parser.add_argument("vector", type=str, help="A genbank (.gb) file containing annotations in the domesticator format to control domesticator function")

args = parser.parse_args()


###### finish imports ######

# Standard library imports

# Third party imports

# Local application imports
from tools import vector_parsing 

###### load files ######
base_vector_record = vector_parsing.make_vector_record(args.vector)

print(base_vector_record)

print(dir(base_vector_record))

for feature in base_vector_record.features:
	if feature.type == "domesticator":
		print(feature)

# ## start debug block -- gives user the steering wheel
# import code
# print("now entering interactive console. Press Ctrl-D to return to the script")
# code.interact(local=locals())
# ## end debug block

###### define problems ######



###### optimize ######




###### create reports and output ######
